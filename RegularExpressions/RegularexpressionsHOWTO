Ref: https://docs.python.org/3/howto/regex.html
Major Special Sequences:
\d: Matches any decimal digit; this is equivalent to [0-9]
\D: Matches any non-digit character; this is equivalent to [^0-9]
\s: Matches any whitespace character;
\S: Matches any non white space character;
\w: Matches any alphanumeric character: equivalent to [a-zA-Z0-9_]
\W: Matches any non-alphanumeric character: equivalent to [^a-zA-Z0-9_]

Above sequences can be included inside a character class. e.g. [\s,.] matches a whitespace or ',' or '.' .

Repeating Things 

Being able to match varying sets of characters is the first thing regular expression isn't already possible with the methods available on strings. You can also specify a certain portion of the Regular Expression must be repeated a certain number of times. 

The first metacharacter for repeating things that we’ll look at is *. * doesn’t match the literal character '*'; instead, it specifies that the previous character can be matched zero or more times, instead of exactly once.

Eg. ca*t will match 'ct'(0 as), 'cat'(1 a), 'caat' (2 a) and so forth

Repetitions such as * are greefy hence the matching enginer tries to repeat it as many times as possible. 



